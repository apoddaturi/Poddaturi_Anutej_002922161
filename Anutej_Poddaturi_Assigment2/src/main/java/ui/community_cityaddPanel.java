/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import model.City;
import model.Community;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author podda
 */
public class community_cityAddPanel extends javax.swing.JPanel {

    static Iterable<City> cities;

    /**
     * Creates new form AddCityPanel
     */
    DefaultTableModel tableModel;
    static ArrayList<City> cityList = new ArrayList<City>();

    public community_cityAddPanel() {
        initComponents();
        tableModel = (DefaultTableModel) tableCityDetails.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCityName = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        btnSaveCity = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCityDetails = new javax.swing.JTable();
        btnUpdateCity = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(188, 151, 28));

        lblCityName.setForeground(new java.awt.Color(255, 255, 255));
        lblCityName.setText("City Name");

        lblState.setForeground(new java.awt.Color(255, 255, 255));
        lblState.setText("State");

        btnSaveCity.setBackground(new java.awt.Color(67, 104, 227));
        btnSaveCity.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveCity.setText("Add City");
        btnSaveCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCityActionPerformed(evt);
            }
        });

        tableCityDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City Name", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCityDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCityDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCityDetails);

        btnUpdateCity.setBackground(new java.awt.Color(67, 104, 227));
        btnUpdateCity.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateCity.setText("Update City");
        btnUpdateCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Commity Admin - City Add Panel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveCity, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateCity, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSaveCity, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(btnUpdateCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCityActionPerformed
        // TODO add your handling code here:
        try {
            List<Community> communities = new ArrayList<Community>();
            String cityName = txtCityName.getText();
            String state = txtState.getText();
            if (cityName.isEmpty() || state.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "Enter all Fields",
                        "Try Again",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                City city = new City(cityName, communities, state);
                cityList.add(city);
                Object[] data = {cityName, state};
                tableModel.addRow(data);
                txtCityName.setText("");
                txtState.setText("");
                JOptionPane.showMessageDialog(this,
                        "City Data Saved",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnSaveCityActionPerformed

    private void tableCityDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCityDetailsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableCityDetails.getModel();
        
        txtCityName.setText(tableCityDetails.getValueAt(tableCityDetails.getSelectedRow(), 0).toString());
        txtState.setText(tableCityDetails.getValueAt(tableCityDetails.getSelectedRow(), 1).toString());
    
    }//GEN-LAST:event_tableCityDetailsMouseClicked

    private void btnUpdateCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCityActionPerformed
        // TODO add your handling code here:
        String cityName = txtCityName.getText();
        String state = txtState.getText();
        if (cityName.isEmpty() || state.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "Enter all Fields",
                        "Try Again",
                        JOptionPane.ERROR_MESSAGE);
            } 
        else {
            int rowCount = tableModel.getRowCount();
            
            System.out.println("before c");
            for(City c: cityList)
            {
            if(c.getCityName().equals(cityName) || c.getState().equals(state))
            {
                c.setCityName(cityName);
                c.setState(state);
            }
            }
            for(int i=rowCount-1; i>0;i--)
            {
                System.out.println(i);
                tableModel.removeRow(i);
            }
            System.out.println("after c");
            DefaultTableModel tableMdl = tableModel;
            
            for(City ci: cityList)
            {System.out.println(ci.getCityName()+"---"+ci.getState());
                tableMdl.addRow(new Object[]{ci.getCityName(),ci.getState()});
            }
        }
    }//GEN-LAST:event_btnUpdateCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveCity;
    private javax.swing.JButton btnUpdateCity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCityName;
    private javax.swing.JLabel lblState;
    private javax.swing.JTable tableCityDetails;
    private javax.swing.JTextField txtCityName;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables
}
